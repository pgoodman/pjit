/* Copyright 2012-2013 Peter Goodman, all rights reserved. */

#ifndef PJIT_MIR_OPERATOR_H_
#define PJIT_MIR_OPERATOR_H_
#endif  // PJIT_MIR_OPERATOR_H_

// Arithmetic operations.
PJIT_DECLARE_BINARY_OPERATOR(ADD, +)
PJIT_DECLARE_BINARY_OPERATOR(SUBTRACT, -)
PJIT_DECLARE_BINARY_OPERATOR(MULTIPLY, *)
PJIT_DECLARE_BINARY_OPERATOR(DIVIDE, /)


// Bitwise operations.
PJIT_DECLARE_BINARY_OPERATOR(BITWISE_XOR, ^)
PJIT_DECLARE_BINARY_OPERATOR(BITWISE_OR, |)
PJIT_DECLARE_BINARY_OPERATOR(BITWISE_AND, &)
PJIT_DECLARE_UNARY_OPERATOR(BITWISE_NOT, ~)


// Logical operations.
PJIT_DECLARE_BINARY_OPERATOR(LOGICAL_OR, ||)
PJIT_DECLARE_BINARY_OPERATOR(LOGICAL_AND, &&)
PJIT_DECLARE_UNARY_OPERATOR(LOGICAL_NOT, !)


// Comparison operations.
PJIT_DECLARE_BINARY_OPERATOR(COMPARE_EQ, ==)
PJIT_DECLARE_BINARY_OPERATOR(COMPARE_NE, !=)
PJIT_DECLARE_BINARY_OPERATOR(COMPARE_LT, <)
PJIT_DECLARE_BINARY_OPERATOR(COMPARE_LTE, <=)
PJIT_DECLARE_BINARY_OPERATOR(COMPARE_GT, >)
PJIT_DECLARE_BINARY_OPERATOR(COMPARE_GTE, >=)

